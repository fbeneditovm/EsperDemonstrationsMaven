package GUI;

import com.cor.cep.handler.EventHandler;
import static java.awt.EventQueue.invokeLater;
import java.util.LinkedList;
import static java.util.logging.Level.SEVERE;
import static javax.swing.UIManager.getInstalledLookAndFeels;
import static java.util.logging.Logger.getLogger;
import static javax.swing.UIManager.setLookAndFeel;

/**
 * A Screen to show all the events simple events received
 * @author fbeneditovm
 */
public class EventLogScreen extends javax.swing.JFrame {
    private EventHandler handler; //the event handler that will display events in this screen 
    private LinkedList<String> inEvents; //Stores the new events received (InsertStream)
    private LinkedList<String> rmEvents; //Stores the old events received (RemoveStream)

    /**
     * A constructor for this screen that receives a event handler
     * @param handler the event handler that will display events in this screen
     */
    public EventLogScreen(EventHandler handler) {
        this.handler = handler;
        inEvents = new LinkedList<String>();
        rmEvents = new LinkedList<String>();
        initComponents();
    }
    
    /**
     * A constructor for this screen that does not receive a event handler
     * the handler is then set has null.
     */
    public EventLogScreen(){
        this.handler = null;
        inEvents = new LinkedList<String>();
        rmEvents = new LinkedList<String>();
        initComponents();
    }
    
    /**
     * Receives the events to show
     * @param inEvents the new events received (InsertStream)
     * @param rmEvents the old events received (RemoveStream)
     */
    public void newEvents(LinkedList<String> inEvents, LinkedList<String> rmEvents){
        this.inEvents.addAll(inEvents);
        this.rmEvents.addAll(rmEvents);
        updateLog();
    }
    
    /**
     * Updates both the displayed insert list and the remove list with events in the
     * respective linked lists.
     */
    public void updateLog(){
        String[] data1 = inEvents.toArray(new String[inEvents.size()]);
        insertList.setListData(data1);
        String[] data2 = rmEvents.toArray(new String[rmEvents.size()]);
        removeList.setListData(data2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        showbyBatchToggle = new javax.swing.JToggleButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        insertList = new javax.swing.JList<String>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        removeList = new javax.swing.JList<String>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        jLabel1.setText("Last Events:");

        showbyBatchToggle.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        showbyBatchToggle.setText("Show By Batch");
        showbyBatchToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showbyBatchToggleActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(insertList);

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel2.setText("Insert Stream:");

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel3.setText("Remove Stream:");

        jScrollPane2.setViewportView(removeList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(showbyBatchToggle))
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(showbyBatchToggle, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * Switches between getting the events By Batch or Regular Window
     * by requesting it to the event handler
     * @param evt 
     */
    private void showbyBatchToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showbyBatchToggleActionPerformed
        inEvents = new LinkedList<String>();
        rmEvents = new LinkedList<String>();
        updateLog();

        if (showbyBatchToggle.isSelected())
            handler.getByBatch();
        else
            handler.getByWindow();
    }//GEN-LAST:event_showbyBatchToggleActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            getLogger(EventLogScreen.class.getName()).log(SEVERE, null, ex);
        } catch (InstantiationException ex) {
            getLogger(EventLogScreen.class.getName()).log(SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            getLogger(EventLogScreen.class.getName()).log(SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            getLogger(EventLogScreen.class.getName()).log(SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        invokeLater(new Runnable() {
            public void run() {
                new EventLogScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> insertList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> removeList;
    private javax.swing.JToggleButton showbyBatchToggle;
    // End of variables declaration//GEN-END:variables
}
